|==========|
|Short Term|
|==========|

Nov-21 notes (automatic comments and subscriptions)
---------------------------------------------------
* Customizable email template per site that gets sent out for each comment (notification)

Symsys module
-------------
* permissions for symsysusers will just be interpreted in the viewer, they don't get "modify_permissions"
* joining and leaving groups is somehow covered by permissions
* examine the choices for academic_title and admin_title
* advisor should point to a symsysaffiliate
* change honors_advisor and honors_second_reader to symsysaffiliate pointers (problem is some aren't symsys affiliates) (maybe change the original database)
* come up with specification for new symsys layout
* Figure out how to port mailing lists over
  - announce list == manually created subscriptions with special permissions, such that you cannot unsubscribe, and announcements are just comments on the group

Ontology changes
----------------

Code correctness/consistency/bugs
---------------------------------
* Code cleanup: views, templatetags, and templates, and symsys everything
* We should define which abilities are allowed by default in the item type, not just hard code in create_initial_data.py
* Abstract away from the viewer.request object lying around
* Make more sensible permissions (is there anything more?)
* Either rewrite save_versioned so that we don't have nested transactions (when after_create and permissions call save_versioned again) or wait for this bug to be fixed
  - http://code.djangoproject.com/ticket/2227
* Idea for conflicting HTML id attributes with embedded documents: each id has a prefix representing the current item (or a combination of the viewer/action/noun)

Performance
-----------
* add indexes on things besides foreign keys, like name, description (for search)
  - Maybe Postgres has some nice full-text indexing for good searching
* we need multi-column indexes for permissions (so far it doesn't look like it's helping)
  - we'll try http://docs.djangoproject.com/en/dev/howto/initial-data/#howto-initial-data
* Asynchronous notifications
* See if permissions speed up with more postgres memory (so far it doesn't look like it's helping)
* It would save space if we could have blank names, and somehow the viewer would always display 'Untitled' by default (using the var|default="[Untitled]" filter)
* Use spaceless tag to compress whitespace
  - Be careful, since it will screw with body_str in TextDocumentViewer.show

Features
--------
* edit locks
* Deleting items (i.e. blanking)
  - We have a button to "blank" a specific version, which sets all fields to a filler value and enables a flag called blanked (only exists in version table)
  - We have a button to "blank" the entire item, which does the same thing on all versions AND the current item
  - For every item type, we have a function called blank() which systematically sets all fields to filler value in the correct way (leaving immutable fields untouched and unique fields unique, and so forth with our various constraints)
* Implement some sort of SiteAlias so a Site can have more than one hostname

Layout
------
* Links with borders look bad in safari, but buttons look fine!

Interface
---------
* Get rid of all the [PERMISSION DENIED] and replace it with "Agent 123" or blank
* There should be a full interface for specifying CommentLocations
* Interface to add ContactMethods, Subscriptions, and AuthenticationMethods to Agents
* We should show the default item_type abilities in the permissions action (with a disclaimer about how they can change)
* We should probably add back all the margins on <p> and stuff (look at base.css .regular_css for a start)

Documentation
-------------
* Document more functions with docstrings more
* Make some sort of API doc
* Make the README better (it points to docs/ directory, but users don't know how to compile docs)

Small Details
-------------

Unusual things to remember
--------------------------
* In order to know that X is a member of Y, you only need to have permission to "view item" for the Membership
* The Meta class of a model does not get propagated to the ItemVersion
* remember to fully respect trashed=1 everywhere, like in groups, comments, etc.
* There are cases when there is a cur_agent but no associated account (anonymous, login_as other)
* Some code (especially recursive comments and memberships) assumes that immutable fields actually cannot change
  - This also assumes that `trashed` can only change in trash() and untrash(), and items are always created untrashed
* Don't forget to update crystal icons for new models
* If someone has permission to edit the body of an item, we allow them to add transclusions in some situations (TextDocumentViewer.edit)
* We do not [knowingly] support OneToOneFields and ManyToManyFields in item types



|=========|
|Long Term|
|=========|


Distant Future (sorted by approximate order of planned implementation)
----------------------------------------------------------------------
* Internationalize using ugettext_lazy
* Add Shortcut (maybe call it Reference) item type, with one subclass like ItemShortcut that just points to another item, and others like URLShortcut that point to webpages
* new subclass of Agent called GroupAgent with field called group it belongs to, which is unique so that no two GroupAgents can belong to the same group
* Add other types of subscriptions, like text messages / IMs
* Add exceptions to subscriptions, so you can deeply subscribe to an itemset or item, but cut off certain parts you want to ignore
* We will eventually want to have a item_type table
* migrations (let's use http://south.aeracode.org/)
* More efficient versioning (like like latest version in db, but have deltas to prev versions)
  - Consider not necessarily having linear deltas. If we start with version 1, a spammer comes in and messes it up for version 2, and I "edit" version 1 so that it becomes version 3, the delta would be more efficient if it knew I started with version 1 in order to get to version 3.
* We're going to have to integrate permissions into binary files (e.g., MediaDocument) so that users can't bypass Deme and download things from Apache directly.
  - I'd like to have a settings option where you either have apache with no permissions, django with no permissions, or django with full permissions (or maybe later a workaround with apache and permissions based on cookie)
* respect the format string and have XML output and stuff
* When matching SiteDomain in alias, match iteratively until all subdomains are gone, so if we have deme.com, then www.deme.com matches unless already taken
* Add to ImageDocument metadata like width, height, exif, and a pointer to a thumbfile or 2
* Temporal history viewer that lets you look at the state of the world at a given time (e.g., the roster of a group 1 year ago)
* In CustomUrl, we should prevent top level names like 'static' and 'item' and 'modules', although not a big deal since it doesn't overwrite
* later, think about adding back "edit downcast". we'll have to think about
  - what happens when viewer2 inherits from viewer1, and viewer2 item type subclasses viewer1 item type, and viewer2 inherits the edit/update functionality?
  - make it work better when you downcast an item in the editor, with versioning backward, and calling actions that should be called on create
* work on google app engine
