|==========|
|Short Term|
|==========|


Feb-16 notes (action notices)
-----------------------------
* Make custom tag (included in every ItemViewer.show page) that displays all notices
* Every time somebody does an action, not only will there be action notices on the affected items, but also on the agent who did that action. E.g., Mike deactivates Document: this creates a DeactivateActionNotice on the Document, and a separate kind of notice on Mike (different types of action notices to signify the roles). Alternatively, we'll just have the same ActionNotice, but display them on Agent pages (and subscriptions) based on the creator role.
* Think about PermissionActionNotices (where you need permission to view_permissions).
* Should we have a CreateActionNotice? It doesn't cause any problems anymore, although it's still not very useful since nobody would ever get its notification
* Update the architecture doc with these changes
* write documentation for action notices
* fix the order of super._after_create and stuff (like comments and memberships, the recursive info should be created before the notifications get sent). but think about it: maybe sometimes you want the new structure and sometimes you want the old structure.
* figure out how we are determining the permission to view comments
* probably get rid of TextComment and just call it Comment (and inherit from TextDocument)


Nov-21 notes (automatic comments and subscriptions)
---------------------------------------------------
* Customizable email template per site that gets sent out for each comment (notification)

Symsys module
-------------
* permissions for symsysusers will just be interpreted in the viewer, they don't get "modify_permissions"
* joining and leaving groups is somehow covered by permissions
* examine the choices for academic_title and admin_title
* advisor should point to a symsysaffiliate
* change honors_advisor and honors_second_reader to symsysaffiliate pointers (problem is some aren't symsys affiliates) (maybe change the original database)
* come up with specification for new symsys layout
* Figure out how to port mailing lists over
  - announce list == manually created subscriptions with special permissions, such that you cannot unsubscribe, and announcements are just comments on the group

Ontology changes
----------------

Code correctness/consistency/bugs
---------------------------------
* Change classmethods to staticmethods (and see if we can get alters_data on them!)
* How can you make a DeactivateComment or AddMemberComment unreadable with permissions?
* How do we deal with immutable things that get trashed, but should get recreated by other users? Like webauth usernames or open id usernames, or sites with hostnames?
* Code cleanup: views, templatetags, and templates, and symsys everything
* Abstract away from the viewer.request object lying around
* Either rewrite save_versioned so that we don't have nested transactions (when after_create and permissions call save_versioned again) or wait for this bug to be fixed
  - http://code.djangoproject.com/ticket/2227
* Idea for conflicting HTML id attributes with embedded documents: each id has a prefix representing the current item (or a combination of the viewer/action/noun)
* Make it so you cannot trash certain things, like AnonymousAgent or Admin
* Figure out a more correct subject line for notification emails that hopefully threads correctly in gmail

Performance
-----------
* add indexes on things besides foreign keys, like name, description (for search)
  - Maybe Postgres has some nice full-text indexing for good searching
* we need multi-column indexes for permissions (so far it doesn't look like it's helping)
  - we'll try http://docs.djangoproject.com/en/dev/howto/initial-data/#howto-initial-data
* See if permissions speed up with more postgres memory (so far it doesn't look like it's helping)
* It would save space if we could have blank names, and somehow the viewer would always display 'Untitled' by default (using the var|default="[Untitled]" filter)
* Use spaceless tag to compress whitespace
  - Be careful, since it will screw with body_str in TextDocumentViewer.show

Features
--------
* Destroying items
  - Figure out how to prevent fields from being null when they shouldn't
  - Do remaining TODOs on whole-item destroying
  - Figure out specific-version destroying

Layout
------
* Links with borders look bad in safari, but buttons look fine!

Interface
---------
* Set action_summary whenever someone deactivates/reactivates/destroys that can go in ActionNotice.description
* When you create something, you should get to choose the permissions generated on the item (which will happen before the action notice is generated).
* Get rid of all the [PERMISSION DENIED] and replace it with "Agent 123" or blank
* There should be a full interface for specifying CommentLocations
* Interface to add ContactMethods, Subscriptions, and AuthenticationMethods to Agents
* We should show the default item_type abilities in the permissions action (with a disclaimer about how they can change)
* We should probably add back all the margins on <p> and stuff (look at base.css .regular_css for a start)
* Some sort of arrows in the side-by-side comment interface, or just click->highlight/scroll
* Include hCard in user profiles
* Get rid of prototype dependence by redoing the autocompleter

Documentation
-------------
* Document more functions with docstrings more
* Make some sort of API doc
* Make the README better (it points to docs/ directory, but users don't know how to compile docs)

Small Details
-------------

Unusual things to remember
--------------------------
* In order to know that X is a member of Y, you only need to have permission to "view item" for the Membership
* The Meta class of a model does not get propagated to the ItemVersion
* remember to fully respect trashed=1 everywhere, like in groups, comments, etc.
* There are cases when there is a cur_agent but no associated account (anonymous, login_as other)
* Some code (especially recursive comments and memberships) assumes that immutable fields actually cannot change
  - This also assumes that `trashed` can only change in trash() and untrash(), and items are always created untrashed
* Don't forget to update crystal icons for new models
* If someone has permission to edit the body of an item, we allow them to add transclusions in some situations (TextDocumentViewer.edit)
* We do not [knowingly] support OneToOneFields and ManyToManyFields in item types
* Whenever you do anything to modify an item (like save, trash, untrash, destroy) you better be in the downcasted version.



|=========|
|Long Term|
|=========|


Distant Future (sorted by approximate order of planned implementation)
----------------------------------------------------------------------
* Migrations (let's use http://south.aeracode.org/)
* Edit locks (merging, or evey synchro editing)
* Implement some sort of SiteAlias so a Site can have more than one hostname
* Internationalize using ugettext_lazy
* Add Shortcut (maybe call it Reference) item type, with one subclass like ItemShortcut that just points to another item, and others like URLShortcut that point to webpages
* Add other types of subscriptions, like text messages / IMs
* Add exceptions to subscriptions, so you can deeply subscribe to an itemset or item, but cut off certain parts you want to ignore
* We will eventually want to have a item_type table
* More efficient versioning (like like latest version in db, but have deltas to prev versions)
  - Consider not necessarily having linear deltas. If we start with version 1, a spammer comes in and messes it up for version 2, and I "edit" version 1 so that it becomes version 3, the delta would be more efficient if it knew I started with version 1 in order to get to version 3.
* We're going to have to integrate permissions into binary files (e.g., MediaDocument) so that users can't bypass Deme and download things from Apache directly.
  - I'd like to have a settings option where you either have apache with no permissions, django with no permissions, or django with full permissions (or maybe later a workaround with apache and permissions based on cookie)
* respect the format string and have XML output and stuff
* When matching SiteDomain in alias, match iteratively until all subdomains are gone, so if we have deme.com, then www.deme.com matches unless already taken
* Add to ImageDocument metadata like width, height, exif, and a pointer to a thumbfile or 2
* Temporal history viewer that lets you look at the state of the world at a given time (e.g., the roster of a group 1 year ago)
* In CustomUrl, we should prevent top level names like 'static' and 'item' and 'modules', although not a big deal since it doesn't overwrite
* later, think about adding back "edit downcast". we'll have to think about
  - what happens when viewer2 inherits from viewer1, and viewer2 item type subclasses viewer1 item type, and viewer2 inherits the edit/update functionality?
  - make it work better when you downcast an item in the editor, with versioning backward, and calling actions that should be called on create
* work on google app engine
