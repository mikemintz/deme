Dec-17 notes
------------
* excerpts/highlighting (we still need to talk about details) with apps/highlight icon
* (distant future) new subclass of Agent called GroupAgent with field called group it belongs to, which is unique so that no two GroupAgents can belong to the same group
* respos_job_email_subscribe is replaced with an actual subscription (but be careful that no emails get sent yet) counts as all 3 things
* advisor should point to a symsysaffiliate
* examine the choices for academic_title and admin_title
* we make concentration and ms_track groups, distinct groups for ms and concentration, (eventually use subgroups to solve the Neuro problem)
* we make department be a group
* make sure all of the group memberships are inferred when displaying a profile
* joining and leaving groups is somehow covered by permissions
* change class_year to a group, anyone can join and leave when they want
* for faculty, department2 will be another group that they join
* change honors_advisor and honors_second_reader to symsysaffiliate pointers (problem is some aren't symsys affiliates)
* add an honors group, derive from honors_status field (which we will remove)

Remaining Dec-16 notes
----------------------
* come up with specification for new symsys layout

Nov-21 notes (automatic comments and subscriptions)
---------------------------------------------------
* If you add something to an itemset, the comment is located at that particular "item" but the comment is still on the itemset
* Customizable email per site that gets sent out for each comment

Symsys module
-------------
* permissions for symsysusers will just be interpreted in the viewer, they don't get "modify_permissions"

Ontology changes
----------------
* Add Location class and LocationContains relationship
* Event has multiple locations and times
* Add Excerpt item_type
  - Item_Id
  - ItemVersion
  - FieldItIsAbout (maybe just the body)
  - xpath_string (multiple regions)
  - data
* Add Shortcut (maybe call it Reference) item type, with one subclass like ItemShortcut that just points to another item, and others like URLShortcut that point to webpages
* Add exceptions to subscriptions, so you can deeply subscribe to an itemset or item, but cut off certain parts you want to ignore
* Add more automatic generated comments (like Trash, Untrash, AddToItemset, RemoveFromItemset, etc.)

Unusual things to remember
--------------------------
* The Meta class of a model does not get propagated to the ItemVersion
* remember to fully respect trashed=1 everywhere, like in groups, comments, etc.
* There are cases when there is a cur_agent but no associated account (anonymous, login_as other)

Code correctness/consistency/bugs
---------------------------------
* figure out import deal on deme_django.cms and just cms
* start using verbose_name to have nice displays of item type names
* having the default "Item" and "id" ability_parameter is kind of unelegant.
* make "create folio" after group create be a after_save filter sort of thing, rather than viewer implemented, so subclasses of viewer do okay
* urls should be more modular, not hard coded as much, like all the /static/media and /resource/{{item_type}}
* add sensitive_function.alters_data = True to functions like save_versioned so templates cant call them
* Turn autoescape on in templates and make everything work with that

Performance
-----------
* Speed up itemset view by doing filter permissions rather than per-item
* add indexes on things besides foreign keys, like name,description (for search) or version_number, and in global permissions: ability, ability_parameter, and is_allowed fields
* we need multi-column indexes for permissions
  - we'll try http://docs.djangoproject.com/en/dev/howto/initial-data/#howto-initial-data

Features
--------
* edit locks
* deleting items (i.e. blanking)
* write a query that finds out all of the people that have permission to do X to item Y

Interface
---------
* we need a global permission editor like the local permission editor

Documentation
-------------
* Update the architecture doc
* Document more functions with docstrings more
* Make some sort of API doc

Distant Future
--------------
* migrations (let's use http://south.aeracode.org/)
* more efficient versioning (like like latest version in db, but have deltas to prev versions)
* later, think about adding back "edit downcast". we'll have to think about
  - what happens when viewer2 inherits from viewer1, and viewer2 item type subclasses viewer1 item type, and viewer2 inherits the edit/update functionality?
  - make it work better when you downcast an item in the editor, with versioning backward, and calling actions that should be called on create
* respect the format string and have XML output and stuff
* work on google app engine
* We're going to have to integrate permissions into binary files (e.g., MediaDocument) so that users can't bypass Deme and download things from Apache directly.
  - I'd like to have a settings option where you either have apache with no permissions, django with no permissions, or django with full permissions (or maybe later a workaround with apache and permissions based on cookie)

Small Details
-------------
* make favicon transparent (both symsys and groupspace)
* SSL for login or just sha1 the password in javascript
* don't forget to update crystal icons for new models
* make sure actions that change state go through POST and not GET, like entry_trash
